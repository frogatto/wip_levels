{
air_resistance: 20,
auto_move_camera: [0,0],
dimensions: [0,-10000000,800,0],
id: "neverending-house.cfg",
music: "",
preloads: "",
segment_height: 0,
segment_width: 0,
sub_levels: "neverending-house-segment1,neverending-house-segment2,neverending-house-segment3,neverending-house-segment4,neverending-house-segment5",
title: "",
version: 1.1,
water_resistance: 100,
xscale: 100,
yscale: 100,
character: [
	{
		_addr: "0xb1a95e40",
		current_frame: "normal",
		custom: true,
		face_right: true,
		is_human: true,
		label: "_20ee1348",
		time_in_frame: 0,
		type: "frogatto_playable",
		velocity_x: 0,
		velocity_y: 0,
		x: 200,
		y: -400,
		editor_info: {
			category: "player",
		},
		objects_destroyed: {
			level: "neverending.cfg",
			objects: [],
		},
	},
	{
		_addr: "0xb1abf5d8",
		always_active: true,
		current_frame: "normal",
		custom: true,
		face_right: true,
		label: "_14d53685",
		vars: {
			all_segments: ["neverending-house-segment2","neverending-house-segment3","neverending-house-segment4","neverending-house-segment5"],
			bottom_edge: 0,
			last_triggered: -400,
			segments: ["neverending-house-segment1"],
			top_edge: -608,
			x2_bound: 0,
			x_bound: 1000,
			y2_bound: 0,
			y_bound: -1000,
		},
		on_add_segment: "[choose([
	 map(range(5), 'n',
	    spawn('platform-world1-interior', 300 + 1d(100+20*difficulty_level), vars.top_edge+100+n*120, 1, [set_var('move_x1', 240), set_var('move_x2', 660)])),
	
	map(range(6), 'n',
	  spawn('platform-world1-interior', 200 + 1d200, vars.top_edge+n*120, 1,
	     if(n%2 = 1 and 1d2 = 1, [set_var('move_x1', 240),
				                  set_var('move_x2', 660),
								  set_var('move_speed', 2 + 1d(2 + difficulty_level))])))
	] +
	
	if(difficulty_level >= 0, [map(range(5), 'n',
			                    map(range(3), 'n', spawn('crumbling_bricks_cement', 400 + (n%2)*100 + m*16, vars.top_edge + (n+1)*120, 1)) +
							[spawn('platform-world1-interior', 300, vars.top_edge, 1)]	
								)], [])
	),
	
	if(vars.segments.last = 'neverending-house-segment2',
	  [choose([null, spawn('bunny_ball_tosser', 30, vars.top_edge+200, -1),
	                   spawn('cannon', 30, vars.top_edge+200, 1, [set_var('loading_time', max(3, 8 - difficulty_level))])]),
	   choose([null, spawn('bunny_ball_tosser', 700, vars.top_edge+200, 1),
	                   spawn('cannon', 700, vars.top_edge+200, -1, [set_var('loading_time', max(3, 8 - difficulty_level))])])],
	   map(range(5), 'n', if(1d5 <= difficulty_level, spawn('ant_flying_black', 300, vars.top_edge + 20 + 120*n, 1, [set_var('x_bound', 100), set_var('x2_bound', 600)]))))
	] where difficulty_level = level.player.vars.score/200",
		on_create: "[add_level_module('neverending-house-segment1', 0, -608)]",
		on_process: "[
	             set(level.dimensions, [level.dimensions[0], level.dimensions[1], level.dimensions[2], min(level.player.midpoint_y + 220, level.dimensions[3] - 1)]),
	             set(level.player.vars.score, max(0, level.player.vars.score, (-level.player.midpoint_y - 500)/10)),
	             if(level.player.midpoint_y < top_edge + 500,
	              [
				   map(level.chars, 'c', if(c.midpoint_y > level.player.midpoint_y + 500, remove_object(c))),
	               if(vars.segments.size > 2,
					   [remove_level_module(vars.segments[0]),
					    set(vars.segments, filter(vars.segments, 'seg', seg != vars.segments[0])),
						add(vars.bottom_edge, -608)]),
				   add(vars.segments, [new_segment]),
				   add(vars.top_edge, -608),
                   add_level_module(new_segment, 0, vars.top_edge-608),
				   fire_event('add_segment')
				  ] where new_segment = choose(filter(vars.all_segments, 'seg', not (seg in vars.segments))))] where difficulty_level = level.player.vars.score/200",
		time_in_frame: 0,
		type: "level_controller_onetime",
		velocity_x: 0,
		velocity_y: 0,
		x: 200,
		y: -10000000,
		editor_info: {
			category: "controllers",
			var: [
				{
					name: "x_bound",
					type: "x",
				},
				{
					name: "x2_bound",
					type: "x",
				},
				{
					name: "y_bound",
					type: "y",
				},
				{
					name: "y2_bound",
					type: "y",
				},
			],
		},
	},
],
serialized_objects: {
},
}
